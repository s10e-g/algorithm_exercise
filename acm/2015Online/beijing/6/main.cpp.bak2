#include <bits/stdc++.h>

using namespace std;

int main()
{
    ios::sync_with_stdio(false);
    int n, m, k, x, y, ws, hs, wi, hi, v, max;
    int wf[100001] = {0, 1};
    int hf[100001] = {0, 1};
    int wa[100001] = {0};
    int ha[100001] = {0};
    vector<int> wp, hp;
    while (cin>>n>>m) {
        memset(wf, 0, sizeof(int[100001]));
        memset(hf, 0, sizeof(int[100001]));
        wf[1] = 1;
        hf[1] = 1;
        k = 0;
        for (int i = 2; i <= n; ++i)
            cin>>wf[i];
        for (int i = 2; i <= n; ++i)
            cin>>hf[i];
        for (int i = 0; i < m; ++i) {
            cin>>x>>y;
            memset(wa, 0, sizeof(int[100001]));
            memset(ha, 0, sizeof(int[100001]));
            wp.clear();
            hp.clear();
            ws = (x+k)%n+1;
            hs = (y+k)%n+1;
            wi = ws;
            hi = hs;

            max = n;
            v = 2*n;
            wp.push_back(wi);
            wa[wi] = 1;
            hp.push_back(hi);
            ha[hi] = 1;
            if (ha[wi]) {
                k = wi;
                cout<<k<<' '<<wa[k]<<' '<<ha[k]<<endl;
                continue;
            }
            for (int i = 1; i < max; ++i) {
                if (wi != 1) {
                    wi = wf[wi];
                    wp.push_back(wi);
                    wa[wi] = wp.size();
                }
                if (hi != 1) {
                    hi = hf[hi];
                    hp.push_back(hi);
                    ha[hi] = hp.size();
                }
                if (ha[wi]) {
                    if (max == n) {
                        max = wp.size()*2;
                    }
                    if (wa[wi]+ha[wi] < v) {
                        v = wa[wi]+ha[wi];
                        k = wi;
                    }
                }
                if (wa[hi]) {
                    if (max == n) {
                        max = hp.size()*2;
                    }
                    if (ha[hi]+wa[hi] < v) {
                        v = ha[hi]+wa[hi];
                        k = hi;
                    }
                }
            }
            cout<<k<<' '<<wa[k]<<' '<<ha[k]<<endl;
        }
    }
    return 0;
}

