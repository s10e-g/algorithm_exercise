/*
ID: shadowm6
PROG: butter
LANG: C++
*/

#include <iostream>
#include <fstream>
#include <vector>
#include <queue>

using namespace std;

struct node_struct{
};

void dijkstra(int, int[][801]);

int main()
{
    ifstream fin("butter.in");
    ofstream fout("butter.out");
    int n, p, c, t, x, y, ans;
    cin>>n>>p>>c;
    vector<int> pasture(p+1);
    int g[801][801];
    for(int i = 0; i < n; i++){
        cin>>t;
        pasture[t]++;
    }
    for(int i = 1; i <= p; i++){
        for(int j = 1; j <= p; j++)
            g[i][j] = 2147483647;
        g[i][i] = 0;
    }
    for(int i = 0; i < c; i++){
        cin>>x>>y>>t;
        g[x][y] = t;
        g[y][x] = t;
    }
    for(int i = 1; i <= p; i++)
        if(pasture[i])
            dijkstra(i, g);
    for(int i = 1; i <= p; i++)
        
    return 0;
}

void dijkstra(int source, int g[][801])
{
}

